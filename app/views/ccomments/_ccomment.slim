/- model_class = Ccomment
/- if can? :read, ccomment
  - unless ccomment.id.nil?
    div class='ccomment'
      p
        - if ccomment.user.nil?
          ' Anonymous user:
          =' ccomment.name
        - else
          ' Registered user:
          =' ccomment.user.user_name
        ' likes:
        =' ccomment.get_likes.size
        - if can? :like, ccomment
          = link_to t("helpers.links.like"), "/like/ccomment/#{ccomment.id}", :method => :put, :class => get_like_class(ccomment)
        ' dislikes:
        =' ccomment.get_dislikes.size
        - if can? :dislike, ccomment
          = link_to t("helpers.links.dislike"), "/dislike/ccomment/#{ccomment.id}", :method => :put, :class => get_dislike_class(ccomment)
        br
        = ccomment.message
        br
        - if can? :update, ccomment and !ccomment.approved
          = link_to t("helpers.links.approve"), "/approvals/ccomment/#{ccomment.id}", :method => :put, :class => 'btn btn-default btn-xs'
          '
          = link_to t("helpers.links.disapprove"), "/approvals/ccomment/#{ccomment.id}", :method => :delete, :class => 'btn btn-danger btn-xs'
        - if can? :destroy, ccomment and !post.nil?
          = link_to t("helpers.links.destroy"), post_pcomment_ccomment_path(post, pcomment, ccomment), :method => "delete", :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-danger btn-xs'
      br
- model_class = Ccomment
- if can? :read, ccomment
  - unless ccomment.id.nil?
    div.comment-container
      div.comments-display
        ul.posted-comments
          li
            div.avatar.pull-left
              - if ccomment.user.nil?
                img src="https://ssl.gstatic.com/accounts/ui/avatar_2x.png" border="0"
              - else
                = image_tag(ccomment.user.avatar.url(:thumb), :class => 'image-30')
            div.posted-comment-container
              div.posted-comment-head
                span.posted-comment-title
                  - if can? :update, ccomment and !ccomment.approved
                    br
                    = link_to raw(fa_icon("times", class: "fa-2x")),
                      "/approvals/ccomment/#{ccomment.id}",
                      :method => :delete,
                      :style => "color:#c9302c",
                      :class => "pull-right"
                    '
                    = link_to raw(fa_icon("check", class: "fa-2x")),
                      "/approvals/ccomment/#{ccomment.id}",
                      :method => :put,
                      :style => "color:#428bca",
                      :class => "pull-right"
                  - if ccomment.user.nil?
                    = ccomment.name
                  - else
                    = ccomment.user.user_name
                span.dot •
                span.real-time =ccomment.updated_at.to_datetime.strftime("%d %h %Y %H:%M:%S")
              div.posted-comment-body
                div.posted-comment-txt
                  = ccomment.message
              div.posted-comment-foot
                - if can? :destroy, ccomment and !post.nil?
                  span.post-edit
                    = link_to raw(fa_icon("trash", class: "fa-2x")),
                      post_pcomment_ccomment_path(post, pcomment, ccomment),
                      :method => "delete",
                      :data => { :confirm => 'Are you sure' },
                      :class => "pull-right"
                  span.dot •
                  - if can? :like, pcomment
                    = link_to raw(fa_icon("thumbs-up", class: "fa-2x")),
                      "/like/pcomment/#{ccomment.id}",
                      :method => :put,
                      :style => get_like_class(ccomment)
                  | (#{ccomment.get_likes.size})
                  span.dot •
                  -if can? :dislike, ccomment
                    = link_to raw(fa_icon("thumbs-down", class: "fa-2x")),
                      "/dislike/ccomment/#{ccomment.id}",
                      :method => :put,
                      :style => get_dislike_class(ccomment)
                  | (#{ccomment.get_dislikes.size})
            div.clear

